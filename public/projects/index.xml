<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projets on Turbo Tartine Games</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projets on Turbo Tartine Games</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 18 Nov 2024 06:28:42 +0100</lastBuildDate><atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenRE (Open Retro Engine)</title>
      <link>http://localhost:1313/projects/open_re/</link>
      <pubDate>Mon, 18 Nov 2024 06:28:42 +0100</pubDate>
      
      <guid>http://localhost:1313/projects/open_re/</guid>
      
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Si vous avez lu &lt;a href=&#34;http://localhost:1313/posts/i_love_fixed_cams/&#34;&gt;cet article&lt;/a&gt;, vous savez déjà que  j’ai un faible pour les jeux vidéos en caméras fixes. Ce genre, emblématique de la fin des années 90, m&amp;rsquo;a toujours fasciné. Si cela ne vous évoquent pas grand-chose, ou si vous êtes simplement curieux de découvrir ce qui les rend si uniques à mes yeux, je vous invite à y jeter un œil.&lt;/p&gt;
&lt;p&gt;En tentant de développer mon propre jeu en caméra fixe, j’ai rapidement réalisé une chose : les outils et ressources disponnibles sur le sujet sont rares. Certes, on trouve quelques tutoriels pour gérer les caméras ou implémenter les déplacements du joueur. Mais je n&amp;rsquo;ai rien trouvé qui aide à relever le vrai défi de cette approche : &lt;em&gt;&amp;ldquo;Comment intégrer harmonieusement des éléments interactifs dans des décor précalculés ?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
