<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projets on Tartine Interactive</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projets on Tartine Interactive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 18 Nov 2024 06:28:42 +0100</lastBuildDate><atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenRE (Open Retro Engine)</title>
      <link>http://localhost:1313/projects/open_re/</link>
      <pubDate>Mon, 18 Nov 2024 06:28:42 +0100</pubDate>
      
      <guid>http://localhost:1313/projects/open_re/</guid>
      
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Comme vous pouvez le constater en détail dans &lt;a href=&#34;http://localhost:1313/posts/i_love_fixed_cams/&#34;&gt;cet article&lt;/a&gt;, je suis un grand nostalgique de l&amp;rsquo;ère des caméra fixe et des contrôles tank. Si vous ne voyez pas à quoi je fais référence, je vous conseille d&amp;rsquo;y faire un tour. Les réponses aux questions que vous vous posez s&amp;rsquo;y trouvent certainement.&lt;/p&gt;
&lt;p&gt;En cherchant à développer un jeu de ce type, je me suis vite rendu compte qu&amp;rsquo;il n&amp;rsquo;était pas facile de trouver des outils/resources traitant du sujet. Apparament les seules chose qui existent facilitent la manipulation des caméras mais je n&amp;rsquo;ai rien trouvé permetant de tirer partie de l&amp;rsquo;immobilité des points de vue en précalculant le rendu de la scene. Ce qui à mon sens est pourtant le principale interêt (et la principale difficulté) lié à cette technique. C&amp;rsquo;est donc assez naturellement que j&amp;rsquo;en suis venu à proposer ma propre solution.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
